###info
title=파이썬 명령행 인자 메뉴얼(Command Menual)
created=2014-10-20
ad=true
category=Python 3.X
tags=Python 3.X
###
#p {=* 이 포스팅은 네이버 블로그에서 작성(2012.11.07)한 내용을 옮겨온 것입니다.}
#p 구글링하면서 문법 공부하는 중에 쓸만한 글을 찾아냈다. 메뉴얼까지 완벽하게 만들고자 하는 분은 아래링크를 참조하면 좋을듯.

###box.green
#p {$http://forum.codecall.net/topic/47460-python-tutorial-handling-command-line-arguments/#axzz2BUaEbPhZ"|Python Tutorial - Handling Command Line Arguments}
###
#p 밑의 소스는 한번 테스트겸 만들어본 메모장 메뉴얼이다. (세부 로직은 귀찮아서 안짬. 심지어 옵션도 복붙... -_-)

###code.py
# memopad.py
from optparse import OptionParser
import sys
 
if(len(sys.argv) &lt;= 1): # 인자 첫번째는 실행 파일이 들어가므로 무조건 길이는 1 이상이다.
	print("memopad.py -h 또는 --help 를 입력해 메뉴얼을 참조하세요.")
	exit()
 
use = "Usage: %prog [options] filename"
parser = OptionParser(usage = use)
parser.add_option("-n", "--new", dest="newMemo", default=False, action="store_true", help="새 메모를 만듭니다.")
parser.add_option("-r", "--read", dest="readMemo", default=False, action="store_true", help="메모를 출력합니다.")
 
options, args = parser.parse_args()
 
if options.newMemo:
	print ("[System] "+args[0]+"을/를 만듭니다.")
	# ... process
elif options.readMemo:
	print ("[System] "+args[0]+"을/를 출력합니다.")
	# ... process
###

#p P.S 인자값 처리까지 해주진 않으니 if문을 조금 더 다듬어서 로직 처리에 필요한 인자를 다 받았는지 봐야 한다.
#p P.S2 parser option에 들어가는 값들이 무엇인지 자세히 알고 싶으면 {$http://docs.python.org/2/library/optparse.html|Parser for command line options} 를 참조해보자.
#p 다음은 실행 화면이다.
{$$/blog/images/23.png}